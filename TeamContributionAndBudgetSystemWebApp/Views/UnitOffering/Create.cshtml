@model TeamContributionAndBudgetSystemWebApp.Models.UnitOffering

@{
   ViewBag.Title = "Create New Unit Offering";
}

<h2>Bulk Upload new Unit Offerings</h2>
@using( Html.BeginForm( "CreateBulkUnitOffering", "UnitOffering", FormMethod.Post, new { enctype = "multipart/form-data" } ) )
{
   @Html.AntiForgeryToken( )
   <div class="form-horizontal">
      <div class="form-group">
         <div class="col-md-10">
            <input type="file" name="File" required />
         </div>
      </div>

      <div class="form-group">
         <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Upload" class="btn btn-default" />
         </div>
      </div>

      @if( TempData.ContainsKey( "UploadError" ) )
      {
         <p>
            Error: @TempData[ "UploadError" ]
         </p>
      }

      @if( TempData.ContainsKey( "UploadCount" ) )
      {
         <p>
            Successfully added @TempData[ "UploadCount" ] Unit Offering records.
         </p>
      }

      @if( TempData.ContainsKey( "FailCount" ) )
      {
         <p>
            Failed to added @TempData[ "FailCount" ] Unit Offering records.
            @Html.ActionLink( "Download Error Log", "Download", "Home", new { label = TeamContributionAndBudgetSystemWebApp.Models.FileCSV.SessionLabelUploadErrorLog }, null )
         </p>
      }
   </div>
}

<hr />

<h2>Create New Unit Offering</h2>
@using( Html.BeginForm( ) )
{
   @Html.AntiForgeryToken( )

   <div class="form-horizontal">
      <h4>UnitOffering</h4>
      <hr />
      @Html.ValidationSummary( true, "", new { @class = "text-danger" } )

      <div class="form-group">
         @Html.LabelFor( model => model.Unit, htmlAttributes: new { @class = "control-label col-md-2" } )
         <div class="col-md-10">
            @Html.DropDownList( "UnitId", "Select Unit" )
            @Html.ValidationMessageFor( model => model.UnitId, "", new { @class = "text-danger" } )
         </div>
      </div>

      <div class="form-group">
         @Html.LabelFor( model => model.TeachingPeriod, htmlAttributes: new { @class = "control-label col-md-2" } )
         <div class="col-md-10">
            @Html.DropDownList( "TeachingPeriodId", "Select Teaching Period" )
            @Html.ValidationMessageFor( model => model.TeachingPeriodId, "", new { @class = "text-danger" } )
         </div>
      </div>

      <div class="form-group">
         @Html.LabelFor( model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" } )
         <div class="col-md-10">
            @Html.DropDownList( "YearId", "Select Year" )
            @Html.ValidationMessageFor( model => model.YearId, "", new { @class = "text-danger" } )
         </div>
      </div>

      <div class="form-group">
         @Html.LabelFor( model => model.Convenor, htmlAttributes: new { @class = "control-label col-md-2" } )
         <div class="col-md-10">
            @Html.DropDownList( "ConvenorId", "Select Convenor" )
            @Html.ValidationMessageFor( model => model.ConvenorId, "", new { @class = "text-danger" } )
         </div>
      </div>

      <div class="form-group">
         <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
         </div>
      </div>
   </div>
}
<hr />

<div>
   @Html.ActionLink( "Back to List", "Index" )
</div>

@section Scripts {
   @Scripts.Render( "~/bundles/jqueryval" )
}
